services:
  client-app:
    container_name: client-app
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - server-app
    networks:
      - blog-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    restart: unless-stopped
  server-app:
    container_name: server-app
    build:
      context: ./server
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "5001:5001"
    depends_on:
      db-app:
        condition: service_healthy
    networks:
      - blog-net
    restart: unless-stopped
  db-app:
    container_name: db-app
    image: mongo
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - "dbdata:/data/db"
    networks:
      - blog-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mongosh -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s

volumes:
  dbdata:

networks:
  blog-net:
    driver: bridge