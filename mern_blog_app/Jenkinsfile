pipeline {
    agent any

    tools {
        nodejs 'NODE18'
    }

    environment {
        IMAGE_PREFIX = 'masterdevopscloud'
        DOCKERHUB_CREDENTIALS = 'dockerhublogin'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'jenkins', url:'https://github.com/Roberto-1998/jenkins_ci_cd_mern_app.git'
            }
        }

        stage('Install Backend Dependencies') {
            steps {
                dir('mern_blog_app/server') {
                    sh 'npm ci || npm install || yarn install'
                }
            }
        }

        stage('Lint Backend') {
            steps {
                dir('mern_blog_app/server') {
                    sh 'npm run lint'
                }
            }
        }

        stage('Run Backend Tests') {
            steps {
                dir('mern_blog_app/server') {
                    sh 'npm test -- --watchAll=false || echo "No backend tests yet"'
                }
            }
        }

        stage('Install Frontend Dependencies') {
            steps {
                dir('mern_blog_app/client') {
                    sh 'npm ci || npm install || yarn install'
                }
            }
        }

        stage('Lint Frontend') {
            steps {
                dir('mern_blog_app/client') {
                    sh 'npm run lint'
                }
            }
        }

        stage('Run Frontend Tests') {
            steps {
                dir('mern_blog_app/client') {
                    sh 'npm test -- --watchAll=false || echo "No frontend tests yet"'
                }
            }
        }

        stage('Build Frontend App') {
            steps {
                dir('mern_blog_app/client') {
                    sh 'npm run build'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: 'mern_blog_app/client/build/**', fingerprint: true
                }
            }
        }

        stage('Docker Build & Push - Backend') {
            steps {
                script {
                    def COMMIT = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    def TS = (env.BUILD_TIMESTAMP ?: sh(script: 'date -u +%Y%m%d%H%M%S', returnStdout: true).trim())
                    def BRANCH = (env.BRANCH_NAME ?: 'jenkins').toLowerCase().replaceAll(/[^a-z0-9_.-]/, '-')
                    def TAG = "${BRANCH}-${COMMIT}-${TS}"

                    def imageName = "${env.IMAGE_PREFIX}/mern-backend"
                    dir('mern_blog_app/server') {
                        def img = docker.build("${imageName}:${TAG}")
                        docker.withRegistry('https://index.docker.io/v1/', env.DOCKERHUB_CREDENTIALS) {
                            img.push(TAG)
                            img.push(BRANCH)
                            img.push('latest')
                        }
                    }
                }
            }
            post {
                always {
                    sh 'docker image prune -f || true'
                }
            }
        }

        stage('Docker Build & Push - Frontend') {
            steps {
                script {
                    def COMMIT = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
                    def TS = (env.BUILD_TIMESTAMP ?: sh(script: 'date -u +%Y%m%d%H%M%S', returnStdout: true).trim())
                    def BRANCH = (env.BRANCH_NAME ?: 'jenkins').toLowerCase().replaceAll(/[^a-z0-9_.-]/, '-')
                    def TAG = "${BRANCH}-${COMMIT}-${TS}"

                    def imageName = "${env.IMAGE_PREFIX}/mern-frontend"

                    dir('mern_blog_app/client') {
                        def img = docker.build("${imageName}:${TAG}")
                        docker.withRegistry('https://index.docker.io/v1/', env.DOCKERHUB_CREDENTIALS ) {
                            img.push(TAG)
                            img.push(BRANCH)
                            img.push('latest')
                        }
                    }
                }
            }
            post {
                always {
                    sh 'docker image prune -f || true'
                }
            }
        }

        stage('CD - Smoke Kube Access') {
            steps {
                withKubeConfig(credentialsId: 'kubeconfig-jenkins') {
                    sh 'kubectl config current-context && kubectl get nodes'
                }
            }
        }

        stage('CD - Helm Upgrade') {
            steps {
                withKubeConfig(credentialsId: 'kubeconfig-jenkins') {
                    sh '''
        set -e
        helm upgrade --install mern deploy/helm/mern \
          --namespace default --create-namespace \
          --set backend.image.repository=docker.io/${IMAGE_PREFIX}/mern-backend \
          --set backend.image.tag=latest \
          --set frontend.image.repository=docker.io/${IMAGE_PREFIX}/mern-frontend \
          --set frontend.image.tag=latest \
          --set ingress.className="nginx" \
          --wait --timeout 5m
      '''
                }
            }
        }
    }
}
